extends ./components/layout.pug

block title
  title たのしい Reactive Programming

block content
  .toc
    h1 たのしい Reactive Programming! 💀
    ul.list
      li
        a(href="./case0.html") 0. Data stream like a Twitter feed
      li
        a(href="./case1.html") 1. Multiple click Example
      li
        a(href="./case2.html") 2. Request and Response
      li
        a(href="./case3.html") 3. Generating reqestStream
      li
        a(href="./case4.html") 4. Modelling
      li
        a(href="./case5.html") 5. Using cached responses
    br
    p refs:
    ul.refs
      li
        a(href="https://gist.github.com/staltz/868e7e9bc2a7b8c1f754") The introduction to Reactive Programming you&apos;ve been missing
      li
        a(href="http://ninjinkun.hatenablog.com/entry/introrxja") 【翻訳】あなたが求めていたリアクティブプログラミング入門 - ninjinkun&apos;s diary
    p other refs:
    ul.refs
      li
        a(href="http://www.scoop.it/t/javascript-for-line-of-business-applications/?tag=RxJS") &apos;RxJS&apos; in JavaScript for Line of Business Applications | Scoop.it
      li
        a(href="http://liginc.co.jp/web/js/151272") 「RxJS」初心者入門 - JavaScriptの非同期処理の常識を変えるライブラリ | 株式会社LIG
      li
        a(href="https://teratail.com/questions/11567") Java - 【Java】mapとFlatMapの違い(11567)｜teratail
      li
        a(href="https://github.com/iirvine/principles-of-reactive-programming/blob/master/notes/week-4/002-basic-combinators-on-observable-collections.md") principles-of-reactive-programming/002-basic-combinators-on-observable-collections.md at master · iirvine/principles-of-reactive-programming
      li
        a(href="http://hachibeechan.hateblo.jp/entry/2014/09/07/RxJS%E3%81%A7%E3%83%AA%E3%82%B9%E3%83%88%E8%A6%81%E7%B4%A0%E7%B5%9E%E3%82%8A%E8%BE%BC%E3%81%BF%E6%93%8D%E4%BD%9C%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B") RxJSでリスト要素絞り込み操作を簡単に実装する - タオルケット体操
